{
    "id": "dev-setup",
    "version": "1.0.0",
    "name": "Dev Setup",
    "description": "Setup Dev extensions and related tools for node.js development.",
    "options": {},
    "dependsOn": {
        "ghcr.io/devcontainers/features/node:1": {}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "DigitalBrainstem.javascript-ejs-support",
                "humao.rest-client",
                "streetsidesoftware.code-spell-checker",
                "streetsidesoftware.code-spell-checker-french",
                "dbaeumer.vscode-eslint",
                "rvest.vs-code-prettier-eslint"
            ],
            "settings": {
                "git.autofetch": true,
                "git.confirmSync": false,
                "git.enableSmartCommit": true,
                "git.promptToSaveFilesBeforeCommit": "always",
                "git.mergeEditor": true,
                "files.autoSave": "onFocusChange",
                "files.exclude": {
                    "**/node_modules": true,
                    "**/dist": true
                },
                "search.exclude": {
                    "**/node_modules": true,
                    "**/dist": true
                },
                "search.useIgnoreFiles": true,
                "cSpell.language": "en,fr",
                "editor.codeActionsOnSave": {
                    "source.fixAll.eslint": "always",
                    "source.organizeImports": "always",
                    "source.removeUnusedImports": "explicit",
                    "source.sortImports": "always"
                },
                "editor.defaultFormatter": "rvest.vs-code-prettier-eslint",
                "editor.formatOnType": false,
                "editor.formatOnPaste": true,
                "editor.formatOnSave": true,
                "editor.formatOnSaveMode": "file",
                "vs-code-prettier-eslint.prettierLast": false,
                "javascript.updateImportsOnFileMove.enabled": "always",
                "javascript.preferences.importModuleSpecifier": "shortest"
            }
        }
    }
}