@startuml DAOs
!include stylesPlantuml.puml

namespace daos {
  namespace factory {
    interface DAOFactory {
      + getDAOFactory(sgbd, donneesConfig, eventCallbacks): void
      + start(): void
      + getCompteDAO(): CompteDAO
      + getAgendaDAO(): AgendaDAO
      + getRendezVousDAO(): RendezVousDAO
      + getRepetitionDAO(): RepetitionDAO
      + stop(): void
    }
    DAOFactory --> daos.compte.CompteDAO: renvoie
    DAOFactory --> daos.agenda.AgendaDAO: renvoie
    DAOFactory --> daos.rendezvous.RendezVousDAO: renvoie
    DAOFactory --> daos.repetition.RepetitionDAO: renvoie

    class MongoDAOFactory {
      
    }
    DAOFactory ()- MongoDAOFactory
  }

  namespace agenda {
    interface AgendaDAO {
      + get(id : String): Agenda
      + getAll(filters): Agenda[]
      + create(agenda: Agenda): Agenda
      + update(id:String, agenda: Agenda): Agenda
      + delete(id:String): void
    }

    class AgendaMongooseDAO {
      - model : Model<Agenda>
      + AgendaMongooseDAO(model: Model<Agenda>): void
      - getAgendaFromModel(model: Model<Agenda>): Agenda
    }

    AgendaMongooseDAO ()- AgendaDAO
  }

  namespace rendezvous {
      interface RendezVousDAO {
      + get(id : String): RendezVous
      + getAll(filters): RendezVous[]
      + create(rendezVous: RendezVous): RendezVous
      + update(id:String, rendezVous: RendezVous): RendezVous
      + delete(id:String): void
    }

    class RendezVousMongooseDAO {
      - model : Model<RendezVous>
      + RendezVousMongooseDAO(model: Model<RendezVous>): void
      - getRendezVousFromModel(model: Model<RendezVous>): RendezVous
    }

    RendezVousDAO ()- RendezVousMongooseDAO
  }

  namespace repetition {
    interface RepetitionDAO {
      + get(id : String): Repetition
      + getAll(filters): Repetition[]
      + create(repetition: Repetition): Repetition
      + update(id:String, repetition: Repetition): Repetition
      + delete(id:String): void
    }

    class RepetitionMongooseDAO {
      - model : Model<Repetition>
      + RepetitionMongooseDAO(model: Model<Repetition>): void
      - getRepetitionFromModel(model: Model<Repetition>): Repetition
    }

    RepetitionDAO ()- RepetitionMongooseDAO
  }
}

DAOFactory --> errors.daosFactory.DAOFactoryErrors: throws
' CompteDAO
CompteDAO --> errors.daos.DAOError: throws
' AgendaDAO
AgendaDAO--> errors.daos.DAOError: throws
' RendezVousDAO
RendezVousDAO --> errors.daos.DAOError: throws
' RepetitionDAO
RepetitionDAO --> errors.daos.DAOError: throws

note as n1
  Les DAOs Mongo prenent en param√®tre un Model de Mongoose.
end note

@enduml